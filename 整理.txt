1.基本绘图
    plot(..., linestyle='[-]/--/:/-.', linewidth=[1], color='', label='图签标签')
    legend() # 图标显示位置为自动 'upper left' 为左上

# 创建图形
    mp.figure(窗口名称，figsize=大小，dpi=分辨率, facecolor=颜色)
    mp.title(窗口标题，fontsize=大小)
    mp.xlabel(水平轴标签，fontsize=大小)
    mp.ylabel(垂直标签，fontsize=大小)
    mp.tick_params(labelsize=刻度标签字体大小)
    mp.grid(linestyle=格栅线型)
    mp.text(0.5, 0.5, '2', ha='center', va='center',size=36, alpha=0.5)  # 插入字体

2.刻度标记及范围
    xlim(-10,10) x坐标的刻度范围
    ylim(-10,10) y坐标的刻度范围
    刻度显示，内层为列表
        xticks([1,2,3,4],['a','b','c','d']) x轴上标记1，2，3，4个点，以 a b c d 四个点代替
        yticks(()) 随机

3.坐标轴线颜色及位置
    ax = mp.gca()
    ax.spines['left/right/top/bottom']
    .set_position(('data', 0))  # 'data'当前图， 0为移动到0的位置
    .set_color('none') # none 为隐藏显示

    刻度定位器
        ax.xaxis.set_major_locator(定位器)
        ax.yaxis.set_minor_locator(定位器)
        定位器
            'mp.NullLocator()',  不设置定位器
            'mp.MaxNLocator(nbins=3, steps=[1, 3, 5, 7, 9])',  设置3个刻度，大小根据刻度总和/3 在steps中选
            'mp.FixedLocator(locs=[0, 2.5, 5, 7.5, 10])',      主刻度数为列表中的数
            'mp.AutoLocator()',                                自动刻度
            'mp.IndexLocator(offset=0.5, base=1.5)',           初始偏移0.5(以0.5开始)，步长1.5
            'mp.MultipleLocator()',                            类似于自动，更详细一些
            'mp.LinearLocator(numticks=21)',                   等分为n-1份
            'mp.LogLocator(base=2, subs=[1.0])'                2 -1次方，2 0次方，2 1次方，2 2次方...

4.线上加点
    mp.scatter([x坐标1，x坐标2],[y坐标1，y坐标2],s=大小，marker=点形，edgecolor=边缘色，facecolor=填充色，zorder=Z顺序)

5.备注
    annotate('备注文本'，xy=目标坐标,xycoords=目标坐标系('data'),xytext=文本坐标，textcoords=文本坐标系,fontsize=大小,arrowprops=箭头属性)
    mp.annotate(
    r'$sin(\frac{3\pi}{4})=\frac{\sqrt{2}}{2}$',
    xy=(xo,yo_sin),
    xycoords='data',
    xytext=(20, 20),
    # 偏移坐标第
    textcoords='offset points',
    fontsize=14,
    # 连接线属性
    arrowprops=dict(arrowstyle='->',connectionstyle='arc3, rad=.2')
)

6.区域填充
    fill_between(水平坐标, 起点垂直坐标, 终点垂直坐标, 填充条件,color=颜色, alpha=透明度)
    mp.fill_between(x, cos_y, sin_y, cos_y > sin_y,color='orangered', alpha=0.5)

二.布局
    1.矩阵布局
        mp.subplot(222)
        mp.tight_layout() 紧凑而已(去年边上多余部分)
    2.栅格布局
        import matplotlib.gridspec as mg
        gs = mg.GridSpec(3,3)  分为3行3列栅格
        mp.subplot(gs[:1,1:])  占第0，1行，1，2格
    3.自由布局
        mp.axes([0.03, 0.038, 0.94, 0.924])  在边框左侧百分之3处取，下侧百分之3.8取，占屏94%，92.4%
        mp.axes([0.63, 0.076, 0.31, 0.308])  在边框左侧百分之63处取，下侧百分之7.6取，占屏31%，30.8%



